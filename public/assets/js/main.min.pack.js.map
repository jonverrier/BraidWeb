{"version":3,"file":"main.min.pack.js","mappings":"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","sources":["./src/main.js"],"sourcesContent":["\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\n(function() {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Easy selector helper function\r\n   */\r\n  const select = (el, all = false) => {\r\n    el = el.trim()\r\n    if (all) {\r\n      return [...document.querySelectorAll(el)]\r\n    } else {\r\n      return document.querySelector(el)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy event listener function\r\n   */\r\n  const on = (type, el, listener, all = false) => {\r\n    let selectEl = select(el, all)\r\n    if (selectEl) {\r\n      if (all) {\r\n        selectEl.forEach(e => e.addEventListener(type, listener))\r\n      } else {\r\n        selectEl.addEventListener(type, listener)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy on scroll event listener \r\n   */\r\n  const onscroll = (el, listener) => {\r\n    el.addEventListener('scroll', listener)\r\n  }\r\n\r\n  /**\r\n   * Navbar links active state on scroll\r\n   */\r\n  let navbarlinks = select('#navbar .scrollto', true)\r\n  const navbarlinksActive = () => {\r\n    let position = window.scrollY + 200\r\n    navbarlinks.forEach(navbarlink => {\r\n      if (!navbarlink.hash) return\r\n      let section = select(navbarlink.hash)\r\n      if (!section) return\r\n      if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {\r\n        navbarlink.classList.add('active')\r\n      } else {\r\n        navbarlink.classList.remove('active')\r\n      }\r\n    })\r\n  }\r\n  window.addEventListener('load', navbarlinksActive)\r\n  onscroll(document, navbarlinksActive)\r\n\r\n  /**\r\n   * Scrolls to an element with header offset\r\n   */\r\n  const scrollto = (el) => {\r\n    let header = select('#header')\r\n    let offset = header.offsetHeight\r\n\r\n    if (!header.classList.contains('header-scrolled')) {\r\n      offset -= 20\r\n    }\r\n\r\n    let elementPos = select(el).offsetTop\r\n    window.scrollTo({\r\n      top: elementPos - offset,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Toggle .header-scrolled class to #header when page is scrolled\r\n   */\r\n  let selectHeader = select('#header')\r\n  if (selectHeader) {\r\n    const headerScrolled = () => {\r\n      if (window.scrollY > 100) {\r\n        selectHeader.classList.add('header-scrolled')\r\n      } else {\r\n        selectHeader.classList.remove('header-scrolled')\r\n      }\r\n    }\r\n    window.addEventListener('load', headerScrolled)\r\n    onscroll(document, headerScrolled)\r\n  }\r\n\r\n  /**\r\n   * Back to top button\r\n   */\r\n  let backtotop = select('.back-to-top')\r\n  if (backtotop) {\r\n    const toggleBacktotop = () => {\r\n      if (window.scrollY > 100) {\r\n        backtotop.classList.add('active')\r\n      } else {\r\n        backtotop.classList.remove('active')\r\n      }\r\n    }\r\n    window.addEventListener('load', toggleBacktotop)\r\n    onscroll(document, toggleBacktotop)\r\n  }\r\n\r\n  /**\r\n   * Mobile nav toggle\r\n   */\r\n  on('click', '.mobile-nav-toggle', function(e) {\r\n    select('#navbar').classList.toggle('navbar-mobile')\r\n    this.classList.toggle('bi-list')\r\n    this.classList.toggle('bi-x')\r\n  })\r\n\r\n  /**\r\n   * Mobile nav dropdowns activate\r\n   */\r\n  on('click', '.navbar .dropdown > a', function(e) {\r\n    if (select('#navbar').classList.contains('navbar-mobile')) {\r\n      e.preventDefault()\r\n      this.nextElementSibling.classList.toggle('dropdown-active')\r\n    }\r\n  }, true)\r\n\r\n  /**\r\n   * Scrool with ofset on links with a class name .scrollto\r\n   */\r\n  on('click', '.scrollto', function(e) {\r\n    if (select(this.hash)) {\r\n      e.preventDefault()\r\n\r\n      let navbar = select('#navbar')\r\n      if (navbar.classList.contains('navbar-mobile')) {\r\n        navbar.classList.remove('navbar-mobile')\r\n        let navbarToggle = select('.mobile-nav-toggle')\r\n        navbarToggle.classList.toggle('bi-list')\r\n        navbarToggle.classList.toggle('bi-x')\r\n      }\r\n      scrollto(this.hash)\r\n    }\r\n  }, true)\r\n\r\n  /**\r\n   * Scroll with ofset on page load with hash links in the url\r\n   */\r\n  window.addEventListener('load', () => {\r\n    if (window.location.hash) {\r\n      if (select(window.location.hash)) {\r\n        scrollto(window.location.hash)\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Porfolio isotope and filter\r\n   */\r\n  window.addEventListener('load', () => {\r\n    let portfolioContainer = select('.portfolio-container');\r\n    if (portfolioContainer) {\r\n      let portfolioIsotope = new Isotope(portfolioContainer, {\r\n        itemSelector: '.portfolio-item',\r\n        layoutMode: 'fitRows'\r\n      });\r\n\r\n      let portfolioFilters = select('#portfolio-flters li', true);\r\n\r\n      on('click', '#portfolio-flters li', function(e) {\r\n        e.preventDefault();\r\n        portfolioFilters.forEach(function(el) {\r\n          el.classList.remove('filter-active');\r\n        });\r\n        this.classList.add('filter-active');\r\n\r\n        portfolioIsotope.arrange({\r\n          filter: this.getAttribute('data-filter')\r\n        });\r\n        portfolioIsotope.on('arrangeComplete', function() {\r\n          AOS.refresh()\r\n        });\r\n      }, true);\r\n    }\r\n\r\n  });\r\n\r\n  /**\r\n   * Initiate portfolio lightbox \r\n   */\r\n  const portfolioLightbox = GLightbox({\r\n    selector: '.portfolio-lightbox'\r\n  });\r\n\r\n  /**\r\n   * Portfolio details slider\r\n   */\r\n  new Swiper('.portfolio-details-slider', {\r\n    speed: 400,\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 5000,\r\n      disableOnInteraction: false\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      type: 'bullets',\r\n      clickable: true\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Animation on scroll\r\n   */\r\n  window.addEventListener('load', () => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      easing: 'ease-in-out',\r\n      once: true,\r\n      mirror: false\r\n    })\r\n  });\r\n\r\nlet forms = document.querySelectorAll('.email-form');\r\n\r\n  forms.forEach( function(e) {\r\n    e.addEventListener('submit', function(event) {\r\n      event.preventDefault();\r\n\r\n      let thisForm = this;\r\n\r\n      let action = thisForm.getAttribute('action');\r\n      \r\n      if( ! action ) {\r\n        displayError(thisForm, 'The form action property is not set!')\r\n        return;\r\n      }\r\n      thisForm.querySelector('.loading').classList.add('d-block');\r\n      thisForm.querySelector('.error-message').classList.remove('d-block');\r\n      thisForm.querySelector('.sent-message').classList.remove('d-block');\r\n\r\n      let formData = new FormData( thisForm );\r\n\r\n      if(typeof grecaptcha !== \"undefined\" ) {\r\n         grecaptcha.ready(function() {\r\n            try {\r\n               grecaptcha.execute('6LfwYuobAAAAANkidB1EbtFgZIs1M-nIF19CX5hh', { action: 'email_form_submit' })\r\n                  .then(token => {\r\n                     formData.set('recaptchaToken', token);\r\n                      email_form_submit(thisForm, action, formData);\r\n                })\r\n            } catch(error) {\r\n              displayError(thisForm, error)\r\n            }\r\n          });      \r\n      } else {\r\n        email_form_submit(thisForm, action, formData);\r\n      }\r\n    });\r\n  });\r\n\r\n   function email_form_submit(thisForm, action, formData) {\r\n\r\n    fetch(action, {\r\n      method: 'POST',\r\n       body: JSON.stringify(Object.fromEntries(formData.entries())),\r\n       headers: { 'Content-Type': 'application/json' }\r\n    })\r\n    .then(response => {\r\n      if( response.ok ) {\r\n        return response.text()\r\n      } else {\r\n        throw new Error(`${response.status} ${response.statusText} ${response.url}`); \r\n      }\r\n    })\r\n    .then(data => {\r\n      thisForm.querySelector('.loading').classList.remove('d-block');\r\n      if (data.trim() == 'OK') {\r\n        thisForm.querySelector('.sent-message').classList.add('d-block');\r\n        thisForm.reset(); \r\n      } else {\r\n         throw new Error(data ? data : 'Sorry, something went wrong. Please try again in a few minutes.');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      displayError(thisForm, error);\r\n    });\r\n  }\r\n\r\n  function displayError(thisForm, error) {\r\n    thisForm.querySelector('.loading').classList.remove('d-block');\r\n    thisForm.querySelector('.error-message').innerHTML = error;\r\n    thisForm.querySelector('.error-message').classList.add('d-block');\r\n   }\r\n\r\n})()\r\n"],"names":["select","el","all","trim","document","querySelectorAll","querySelector","on","type","listener","selectEl","forEach","e","addEventListener","onscroll","navbarlinks","navbarlinksActive","position","window","scrollY","navbarlink","hash","section","offsetTop","offsetHeight","classList","add","remove","scrollto","header","offset","contains","elementPos","scrollTo","top","behavior","selectHeader","headerScrolled","backtotop","toggleBacktotop","email_form_submit","thisForm","action","formData","fetch","method","body","JSON","stringify","Object","fromEntries","entries","headers","then","response","ok","text","Error","status","statusText","url","data","reset","catch","error","displayError","innerHTML","toggle","this","preventDefault","nextElementSibling","navbar","navbarToggle","location","portfolioContainer","portfolioIsotope","Isotope","itemSelector","layoutMode","portfolioFilters","arrange","filter","getAttribute","AOS","refresh","GLightbox","selector","Swiper","speed","loop","autoplay","delay","disableOnInteraction","pagination","clickable","init","duration","easing","once","mirror","event","FormData","grecaptcha","ready","execute","token","set"],"sourceRoot":""}