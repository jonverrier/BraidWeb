{"version":3,"file":"pathseg.pack.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,yEAAyE;AACzE,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,yEAAyE;AACzE,iEAAiE;AACjE,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,yEAAyE;AACzE,iEAAiE;AACjE,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,yEAAyE;AACzE,iEAAiE;AACjE,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,yEAAyE;AACzE,iEAAiE;AACjE,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L,yEAAyE,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E,+EAA+E;AAC/E,uEAAuE;AACvE,+EAA+E,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AACnM,+EAA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C7M,yFAAyF,mBAAmB,iBAAiB,sBAAsB,aAAa,yBAAyB,oBAAoB;AAC7M;AACA;AACA;AACA,gFAAgF;AAChF,oFAAoF;AACpF,oFAAoF;AACpF,oFAAoF;AACpF,oFAAoF;AACpF,0GAA0G;AAC1G,0GAA0G;AAC1G,sGAAsG;AACtG,sGAAsG;AACtG,yHAAyH;AACzH,yHAAyH;AACzH,2FAA2F;AAC3F,2FAA2F;AAC3F,yFAAyF;AACzF,yFAAyF;AACzF,wGAAwG;AACxG,wGAAwG;AACxG,oGAAoG;AACpG,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA,wFAAwF,mBAAmB,0BAA0B,oBAAoB;AACzJ,sFAAsF,mBAAmB,0BAA0B,oBAAoB;AACvJ,gGAAgG,mBAAmB,0BAA0B,oBAAoB;AACjcAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","sources":["./pathseg.js"],"sourcesContent":["// SVGPathSeg API polyfill\r\n// https://github.com/progers/pathseg\r\n//\r\n// This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\r\n// SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\r\n// changes which were implemented in Firefox 43 and Chrome 46.\r\n\r\n(function () {\r\n   \"use strict\";\r\n   // The polyfill only applies to browser environments with a `window` object \r\n   // (i.e. not node.js, workers, etc.). If included in one of these \r\n   // environments (such as when using 'react-dom/server'), simply return out\r\n   if (typeof window === 'undefined')\r\n      return;\r\n\r\n   if (!(\"SVGPathSeg\" in window)) {\r\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\r\n      window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\r\n         this.pathSegType = type;\r\n         this.pathSegTypeAsLetter = typeAsLetter;\r\n         this._owningPathSegList = owningPathSegList;\r\n      }\r\n\r\n      window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\r\n\r\n      window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\r\n      window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\r\n      window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\r\n      window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\r\n      window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\r\n      window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\r\n      window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\r\n      window.SVGPathSeg.PATHSEG_ARC_REL = 11;\r\n      window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\r\n      window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\r\n      window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\r\n      window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\r\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\r\n\r\n      // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\r\n      window.SVGPathSeg.prototype._segmentChanged = function () {\r\n         if (this._owningPathSegList)\r\n            this._owningPathSegList.segmentChanged(this);\r\n      }\r\n\r\n      window.SVGPathSegClosePath = function (owningPathSegList) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\r\n      }\r\n      window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegClosePath.prototype.toString = function () { return \"[object SVGPathSegClosePath]\"; }\r\n      window.SVGPathSegClosePath.prototype._asPathString = function () { return this.pathSegTypeAsLetter; }\r\n      window.SVGPathSegClosePath.prototype.clone = function () { return new window.SVGPathSegClosePath(undefined); }\r\n\r\n      window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegMovetoAbs.prototype.toString = function () { return \"[object SVGPathSegMovetoAbs]\"; }\r\n      window.SVGPathSegMovetoAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegMovetoAbs.prototype.clone = function () { return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegMovetoRel.prototype.toString = function () { return \"[object SVGPathSegMovetoRel]\"; }\r\n      window.SVGPathSegMovetoRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegMovetoRel.prototype.clone = function () { return new window.SVGPathSegMovetoRel(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoAbs.prototype.toString = function () { return \"[object SVGPathSegLinetoAbs]\"; }\r\n      window.SVGPathSegLinetoAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegLinetoAbs.prototype.clone = function () { return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoRel.prototype.toString = function () { return \"[object SVGPathSegLinetoRel]\"; }\r\n      window.SVGPathSegLinetoRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegLinetoRel.prototype.clone = function () { return new window.SVGPathSegLinetoRel(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x1 = x1;\r\n         this._y1 = y1;\r\n         this._x2 = x2;\r\n         this._y2 = y2;\r\n      }\r\n      window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\r\n      window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () { return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function () { return this._x1; }, set: function (x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function () { return this._y1; }, set: function (y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function () { return this._x2; }, set: function (x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function () { return this._y2; }, set: function (y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x1 = x1;\r\n         this._y1 = y1;\r\n         this._x2 = x2;\r\n         this._y2 = y2;\r\n      }\r\n      window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoCubicRel.prototype.toString = function () { return \"[object SVGPathSegCurvetoCubicRel]\"; }\r\n      window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoCubicRel.prototype.clone = function () { return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function () { return this._x1; }, set: function (x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function () { return this._y1; }, set: function (y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function () { return this._x2; }, set: function (x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function () { return this._y2; }, set: function (y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x1 = x1;\r\n         this._y1 = y1;\r\n      }\r\n      window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\r\n      window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () { return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function () { return this._x1; }, set: function (x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function () { return this._y1; }, set: function (y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x1 = x1;\r\n         this._y1 = y1;\r\n      }\r\n      window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\r\n      window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () { return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function () { return this._x1; }, set: function (x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function () { return this._y1; }, set: function (y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._r1 = r1;\r\n         this._r2 = r2;\r\n         this._angle = angle;\r\n         this._largeArcFlag = largeArcFlag;\r\n         this._sweepFlag = sweepFlag;\r\n      }\r\n      window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegArcAbs.prototype.toString = function () { return \"[object SVGPathSegArcAbs]\"; }\r\n      window.SVGPathSegArcAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegArcAbs.prototype.clone = function () { return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function () { return this._r1; }, set: function (r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function () { return this._r2; }, set: function (r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function () { return this._angle; }, set: function (angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function () { return this._largeArcFlag; }, set: function (largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function () { return this._sweepFlag; }, set: function (sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._r1 = r1;\r\n         this._r2 = r2;\r\n         this._angle = angle;\r\n         this._largeArcFlag = largeArcFlag;\r\n         this._sweepFlag = sweepFlag;\r\n      }\r\n      window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegArcRel.prototype.toString = function () { return \"[object SVGPathSegArcRel]\"; }\r\n      window.SVGPathSegArcRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegArcRel.prototype.clone = function () { return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function () { return this._r1; }, set: function (r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function () { return this._r2; }, set: function (r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function () { return this._angle; }, set: function (angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function () { return this._largeArcFlag; }, set: function (largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function () { return this._sweepFlag; }, set: function (sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\r\n         this._x = x;\r\n      }\r\n      window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\r\n      window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x; }\r\n      window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () { return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\r\n      Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\r\n         this._x = x;\r\n      }\r\n      window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\r\n      window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x; }\r\n      window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () { return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x); }\r\n      Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\r\n      window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._y; }\r\n      window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () { return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y); }\r\n      Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegLinetoVerticalRel.prototype.toString = function () { return \"[object SVGPathSegLinetoVerticalRel]\"; }\r\n      window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._y; }\r\n      window.SVGPathSegLinetoVerticalRel.prototype.clone = function () { return new window.SVGPathSegLinetoVerticalRel(undefined, this._y); }\r\n      Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x2 = x2;\r\n         this._y2 = y2;\r\n      }\r\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\r\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () { return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function () { return this._x2; }, set: function (x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function () { return this._y2; }, set: function (y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n         this._x2 = x2;\r\n         this._y2 = y2;\r\n      }\r\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\r\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () { return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function () { return this._x2; }, set: function (x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function () { return this._y2; }, set: function (y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\r\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () { return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\r\n         window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\r\n         this._x = x;\r\n         this._y = y;\r\n      }\r\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\r\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\r\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () { return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function () { return this._x; }, set: function (x) { this._x = x; this._segmentChanged(); }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function () { return this._y; }, set: function (y) { this._y = y; this._segmentChanged(); }, enumerable: true });\r\n\r\n      // Add createSVGPathSeg* functions to window.SVGPathElement.\r\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\r\n      window.SVGPathElement.prototype.createSVGPathSegClosePath = function () { return new window.SVGPathSegClosePath(undefined); }\r\n      window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) { return new window.SVGPathSegMovetoAbs(undefined, x, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) { return new window.SVGPathSegMovetoRel(undefined, x, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) { return new window.SVGPathSegLinetoAbs(undefined, x, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) { return new window.SVGPathSegLinetoRel(undefined, x, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) { return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) { return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) { return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) { return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\r\n      window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\r\n      window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) { return new window.SVGPathSegLinetoHorizontalAbs(undefined, x); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) { return new window.SVGPathSegLinetoHorizontalRel(undefined, x); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) { return new window.SVGPathSegLinetoVerticalAbs(undefined, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) { return new window.SVGPathSegLinetoVerticalRel(undefined, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) { return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) { return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) { return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\r\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) { return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\r\n\r\n      if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\r\n         // Add getPathSegAtLength to SVGPathElement.\r\n         // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\r\n         // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\r\n         window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\r\n            if (distance === undefined || !isFinite(distance))\r\n               throw \"Invalid arguments.\";\r\n\r\n            var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n            measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\r\n            var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\r\n\r\n            // If the path is empty, return 0.\r\n            if (lastPathSegment <= 0)\r\n               return 0;\r\n\r\n            do {\r\n               measurementElement.pathSegList.removeItem(lastPathSegment);\r\n               if (distance > measurementElement.getTotalLength())\r\n                  break;\r\n               lastPathSegment--;\r\n            } while (lastPathSegment > 0);\r\n            return lastPathSegment;\r\n         }\r\n      }\r\n   }\r\n\r\n   // Checking for SVGPathSegList in window checks for the case of an implementation without the\r\n   // SVGPathSegList API.\r\n   // The second check for appendItem is specific to Firefox 59+ which removed only parts of the\r\n   // SVGPathSegList API (e.g., appendItem). In this case we need to re-implement the entire API\r\n   // so the polyfill data (i.e., _list) is used throughout.\r\n   if (!(\"SVGPathSegList\" in window) || !(\"appendItem\" in window.SVGPathSegList.prototype)) {\r\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\r\n      window.SVGPathSegList = function (pathElement) {\r\n         this._pathElement = pathElement;\r\n         this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\r\n\r\n         // Use a MutationObserver to catch changes to the path's \"d\" attribute.\r\n         this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\r\n         this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\r\n         this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\r\n\r\n      Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\r\n         get: function () {\r\n            this._checkPathSynchronizedToList();\r\n            return this._list.length;\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      // The length property was not specified but was in Firefox 58.\r\n      Object.defineProperty(window.SVGPathSegList.prototype, \"length\", {\r\n         get: function () {\r\n            this._checkPathSynchronizedToList();\r\n            return this._list.length;\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      // Add the pathSegList accessors to window.SVGPathElement.\r\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\r\n      Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\r\n         get: function () {\r\n            if (!this._pathSegList)\r\n               this._pathSegList = new window.SVGPathSegList(this);\r\n            return this._pathSegList;\r\n         },\r\n         enumerable: true\r\n      });\r\n      // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\r\n      Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function () { return this.pathSegList; }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function () { return this.pathSegList; }, enumerable: true });\r\n      Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function () { return this.pathSegList; }, enumerable: true });\r\n\r\n      // Process any pending mutations to the path element and update the list as needed.\r\n      // This should be the first call of all public functions and is needed because\r\n      // MutationObservers are not synchronous so we can have pending asynchronous mutations.\r\n      window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\r\n         this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\r\n      }\r\n\r\n      window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\r\n         if (!this._pathElement)\r\n            return;\r\n         var hasPathMutations = false;\r\n         mutationRecords.forEach(function (record) {\r\n            if (record.attributeName == \"d\")\r\n               hasPathMutations = true;\r\n         });\r\n         if (hasPathMutations)\r\n            this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\r\n      }\r\n\r\n      // Serialize the list and update the path's 'd' attribute.\r\n      window.SVGPathSegList.prototype._writeListToPath = function () {\r\n         this._pathElementMutationObserver.disconnect();\r\n         this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\r\n         this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n      }\r\n\r\n      // When a path segment changes the list needs to be synchronized back to the path element.\r\n      window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\r\n         this._writeListToPath();\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.clear = function () {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         this._list.forEach(function (pathSeg) {\r\n            pathSeg._owningPathSegList = null;\r\n         });\r\n         this._list = [];\r\n         this._writeListToPath();\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.initialize = function (newItem) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         this._list = [newItem];\r\n         newItem._owningPathSegList = this;\r\n         this._writeListToPath();\r\n         return newItem;\r\n      }\r\n\r\n      window.SVGPathSegList.prototype._checkValidIndex = function (index) {\r\n         if (isNaN(index) || index < 0 || index >= this.numberOfItems)\r\n            throw \"INDEX_SIZE_ERR\";\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.getItem = function (index) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         this._checkValidIndex(index);\r\n         return this._list[index];\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\r\n         if (index > this.numberOfItems)\r\n            index = this.numberOfItems;\r\n         if (newItem._owningPathSegList) {\r\n            // SVG2 spec says to make a copy.\r\n            newItem = newItem.clone();\r\n         }\r\n         this._list.splice(index, 0, newItem);\r\n         newItem._owningPathSegList = this;\r\n         this._writeListToPath();\r\n         return newItem;\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         if (newItem._owningPathSegList) {\r\n            // SVG2 spec says to make a copy.\r\n            newItem = newItem.clone();\r\n         }\r\n         this._checkValidIndex(index);\r\n         this._list[index] = newItem;\r\n         newItem._owningPathSegList = this;\r\n         this._writeListToPath();\r\n         return newItem;\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.removeItem = function (index) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         this._checkValidIndex(index);\r\n         var item = this._list[index];\r\n         this._list.splice(index, 1);\r\n         this._writeListToPath();\r\n         return item;\r\n      }\r\n\r\n      window.SVGPathSegList.prototype.appendItem = function (newItem) {\r\n         this._checkPathSynchronizedToList();\r\n\r\n         if (newItem._owningPathSegList) {\r\n            // SVG2 spec says to make a copy.\r\n            newItem = newItem.clone();\r\n         }\r\n         this._list.push(newItem);\r\n         newItem._owningPathSegList = this;\r\n         // TODO: Optimize this to just append to the existing attribute.\r\n         this._writeListToPath();\r\n         return newItem;\r\n      }\r\n\r\n      window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\r\n         var string = \"\";\r\n         var first = true;\r\n         pathSegArray.forEach(function (pathSeg) {\r\n            if (first) {\r\n               first = false;\r\n               string += pathSeg._asPathString();\r\n            } else {\r\n               string += \" \" + pathSeg._asPathString();\r\n            }\r\n         });\r\n         return string;\r\n      }\r\n\r\n      // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\r\n      window.SVGPathSegList.prototype._parsePath = function (string) {\r\n         if (!string || string.length == 0)\r\n            return [];\r\n\r\n         var owningPathSegList = this;\r\n\r\n         var Builder = function () {\r\n            this.pathSegList = [];\r\n         }\r\n\r\n         Builder.prototype.appendSegment = function (pathSeg) {\r\n            this.pathSegList.push(pathSeg);\r\n         }\r\n\r\n         var Source = function (string) {\r\n            this._string = string;\r\n            this._currentIndex = 0;\r\n            this._endIndex = this._string.length;\r\n            this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n\r\n            this._skipOptionalSpaces();\r\n         }\r\n\r\n         Source.prototype._isCurrentSpace = function () {\r\n            var character = this._string[this._currentIndex];\r\n            return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\r\n         }\r\n\r\n         Source.prototype._skipOptionalSpaces = function () {\r\n            while (this._currentIndex < this._endIndex && this._isCurrentSpace())\r\n               this._currentIndex++;\r\n            return this._currentIndex < this._endIndex;\r\n         }\r\n\r\n         Source.prototype._skipOptionalSpacesOrDelimiter = function () {\r\n            if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\r\n               return false;\r\n            if (this._skipOptionalSpaces()) {\r\n               if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\r\n                  this._currentIndex++;\r\n                  this._skipOptionalSpaces();\r\n               }\r\n            }\r\n            return this._currentIndex < this._endIndex;\r\n         }\r\n\r\n         Source.prototype.hasMoreData = function () {\r\n            return this._currentIndex < this._endIndex;\r\n         }\r\n\r\n         Source.prototype.peekSegmentType = function () {\r\n            var lookahead = this._string[this._currentIndex];\r\n            return this._pathSegTypeFromChar(lookahead);\r\n         }\r\n\r\n         Source.prototype._pathSegTypeFromChar = function (lookahead) {\r\n            switch (lookahead) {\r\n               case \"Z\":\r\n               case \"z\":\r\n                  return window.SVGPathSeg.PATHSEG_CLOSEPATH;\r\n               case \"M\":\r\n                  return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\r\n               case \"m\":\r\n                  return window.SVGPathSeg.PATHSEG_MOVETO_REL;\r\n               case \"L\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n               case \"l\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n               case \"C\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\r\n               case \"c\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\r\n               case \"Q\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\r\n               case \"q\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\r\n               case \"A\":\r\n                  return window.SVGPathSeg.PATHSEG_ARC_ABS;\r\n               case \"a\":\r\n                  return window.SVGPathSeg.PATHSEG_ARC_REL;\r\n               case \"H\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\r\n               case \"h\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\r\n               case \"V\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\r\n               case \"v\":\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\r\n               case \"S\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\r\n               case \"s\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\r\n               case \"T\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\r\n               case \"t\":\r\n                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\r\n               default:\r\n                  return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n            }\r\n         }\r\n\r\n         Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\r\n            // Check for remaining coordinates in the current command.\r\n            if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\r\n               if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS)\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n               if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL)\r\n                  return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n               return previousCommand;\r\n            }\r\n            return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n         }\r\n\r\n         Source.prototype.initialCommandIsMoveTo = function () {\r\n            // If the path is empty it is still valid, so return true.\r\n            if (!this.hasMoreData())\r\n               return true;\r\n            var command = this.peekSegmentType();\r\n            // Path must start with moveTo.\r\n            return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\r\n         }\r\n\r\n         // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\r\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\r\n         Source.prototype._parseNumber = function () {\r\n            var exponent = 0;\r\n            var integer = 0;\r\n            var frac = 1;\r\n            var decimal = 0;\r\n            var sign = 1;\r\n            var expsign = 1;\r\n\r\n            var startIndex = this._currentIndex;\r\n\r\n            this._skipOptionalSpaces();\r\n\r\n            // Read the sign.\r\n            if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\r\n               this._currentIndex++;\r\n            else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\r\n               this._currentIndex++;\r\n               sign = -1;\r\n            }\r\n\r\n            if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\r\n               // The first character of a number must be one of [0-9+-.].\r\n               return undefined;\r\n\r\n            // Read the integer part, build right-to-left.\r\n            var startIntPartIndex = this._currentIndex;\r\n            while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\r\n               this._currentIndex++; // Advance to first non-digit.\r\n\r\n            if (this._currentIndex != startIntPartIndex) {\r\n               var scanIntPartIndex = this._currentIndex - 1;\r\n               var multiplier = 1;\r\n               while (scanIntPartIndex >= startIntPartIndex) {\r\n                  integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\r\n                  multiplier *= 10;\r\n               }\r\n            }\r\n\r\n            // Read the decimals.\r\n            if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\r\n               this._currentIndex++;\r\n\r\n               // There must be a least one digit following the .\r\n               if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\r\n                  return undefined;\r\n               while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\r\n                  frac *= 10;\r\n                  decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\r\n                  this._currentIndex += 1;\r\n               }\r\n            }\r\n\r\n            // Read the exponent part.\r\n            if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\r\n               this._currentIndex++;\r\n\r\n               // Read the sign of the exponent.\r\n               if (this._string.charAt(this._currentIndex) == \"+\") {\r\n                  this._currentIndex++;\r\n               } else if (this._string.charAt(this._currentIndex) == \"-\") {\r\n                  this._currentIndex++;\r\n                  expsign = -1;\r\n               }\r\n\r\n               // There must be an exponent.\r\n               if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\r\n                  return undefined;\r\n\r\n               while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\r\n                  exponent *= 10;\r\n                  exponent += (this._string.charAt(this._currentIndex) - \"0\");\r\n                  this._currentIndex++;\r\n               }\r\n            }\r\n\r\n            var number = integer + decimal;\r\n            number *= sign;\r\n\r\n            if (exponent)\r\n               number *= Math.pow(10, expsign * exponent);\r\n\r\n            if (startIndex == this._currentIndex)\r\n               return undefined;\r\n\r\n            this._skipOptionalSpacesOrDelimiter();\r\n\r\n            return number;\r\n         }\r\n\r\n         Source.prototype._parseArcFlag = function () {\r\n            if (this._currentIndex >= this._endIndex)\r\n               return undefined;\r\n            var flag = false;\r\n            var flagChar = this._string.charAt(this._currentIndex++);\r\n            if (flagChar == \"0\")\r\n               flag = false;\r\n            else if (flagChar == \"1\")\r\n               flag = true;\r\n            else\r\n               return undefined;\r\n\r\n            this._skipOptionalSpacesOrDelimiter();\r\n            return flag;\r\n         }\r\n\r\n         Source.prototype.parseSegment = function () {\r\n            var lookahead = this._string[this._currentIndex];\r\n            var command = this._pathSegTypeFromChar(lookahead);\r\n            if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\r\n               // Possibly an implicit command. Not allowed if this is the first command.\r\n               if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN)\r\n                  return null;\r\n               command = this._nextCommandHelper(lookahead, this._previousCommand);\r\n               if (command == window.SVGPathSeg.PATHSEG_UNKNOWN)\r\n                  return null;\r\n            } else {\r\n               this._currentIndex++;\r\n            }\r\n\r\n            this._previousCommand = command;\r\n\r\n            switch (command) {\r\n               case window.SVGPathSeg.PATHSEG_MOVETO_REL:\r\n                  return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\r\n                  return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_REL:\r\n                  return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_ABS:\r\n                  return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\r\n                  return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\r\n                  return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\r\n                  return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\r\n                  return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_CLOSEPATH:\r\n                  this._skipOptionalSpaces();\r\n                  return new window.SVGPathSegClosePath(owningPathSegList);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\r\n                  var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\r\n                  var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\r\n                  return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\r\n                  return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n               case window.SVGPathSeg.PATHSEG_ARC_REL:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n               case window.SVGPathSeg.PATHSEG_ARC_ABS:\r\n                  var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\r\n                  return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n               default:\r\n                  throw \"Unknown path seg type.\"\r\n            }\r\n         }\r\n\r\n         var builder = new Builder();\r\n         var source = new Source(string);\r\n\r\n         if (!source.initialCommandIsMoveTo())\r\n            return [];\r\n         while (source.hasMoreData()) {\r\n            var pathSeg = source.parseSegment();\r\n            if (!pathSeg)\r\n               return [];\r\n            builder.appendSegment(pathSeg);\r\n         }\r\n\r\n         return builder.pathSegList;\r\n      }\r\n   }\r\n}());\r\n\r\n"],"names":[],"sourceRoot":""}